#define MOD 1000000007
class Solution{
    
    
    long int solverec(int N)
    {
    
        if(N==1)
        return 0;
        if(N==2)
        return 1;
        long int ans=(N-1)*((solverec(N-1)%MOD)+(solverec(N-2)%MOD))%MOD;
        return ans;
    }
    long int solvemem(int N,vector<int>&dp)
    {
        if(N==1)
        return 0;
        if(N==2)
        return 1;
        if(dp[N]!=-1)
        return dp[N];
        long int ans=((N-1)*((solvemem(N-1,dp)%MOD)+solvemem(N-2,dp)%MOD))%MOD;
        dp[N]=ans;
        return ans;
    }
    long int tabulation(int N)
    {
        vector<long  int> dp(N+1,0);
        dp[1]=0;
        dp[2]=1;
        for(int i=3;i<=N;i++)
        {
            long int ans=((i-1)*(dp[i-1]%MOD+dp[i-2]%MOD)%MOD);
            dp[i]=ans;
        }
        return dp[N];
    }
    long int SO(int N)
    {
        long int pre2=0;
        long int pre1=1;
        for(int i=3;i<=N;i++)
        {
            long int ans=((i-1)*((pre1%MOD)+(pre2%MOD)))%MOD;
            long int curr=ans;
            pre2=pre1;
            pre1=curr;
        }
        return pre1;
    }
public:
    long int disarrange(int N){
        
        // long int ans=solverec(N);
        // return ans;
        // vector<int> dp(N+1,-1);
        // long int ans=solvemem(N,dp);
        // return ans;
        // long int ans=tabulation(N);
        // return ans;
        long int ans=SO(N);
        return ans;
    }
};
